{"version":3,"sources":["context.js","components/ImageCard.js","components/Pagination.js","components/Preloader.js","pages/MainPage.js","pages/FavouritesPage.js","components/Header.js","App.js","index.js"],"names":["Context","React","createContext","ImageCard","post","useContext","toggleFavourite","filterColor","className","style","borderRadius","overflow","marginLeft","marginRight","src","download_url","alt","includes","id","onClick","author","Pagination","paginate","nextPage","prevPage","amountOfPages","currentPage","pageItems","num","push","key","href","alignItems","justifyContent","Preloader","MainPage","posts","cards","width","showLoading","map","item","FavouritesPage","history","useHistory","list","updateList","useEffect","Header","to","App","useState","postsPerPage","setPosts","api","a","axios","result","data","getPosts","setFilterColor","setList","listItems","listId","getDataFromLocalStorage","Object","keys","localStorage","JSON","parse","getItem","pageNum","get","then","response","Provider","value","stringify","removeItem","setItem","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52836651.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Context = React.createContext();\n","import React from \"react\";\nimport \"../App.css\";\nimport { Context } from \"../context\";\nconst ImageCard = ({ post }) => {\n  const { toggleFavourite, filterColor } = React.useContext(Context);\n\n  return (\n    <div className=\"row\">\n      <div\n        className=\"card \"\n        style={{\n          borderRadius: \"8px \",\n          overflow: \"hidden\",\n          marginLeft: \"10px\",\n          marginRight: \"10px\",\n        }}\n      >\n        <div className=\"card-image\">\n          <img src={post.download_url} alt=\"can't find\" />\n          <button\n            className={`btn-floating halfway-fab waves-effect waves-light \n            ${filterColor.includes(post.id) ? \"green \" : \"red\"}`}\n            onClick={() => {\n              toggleFavourite(post.id, post);\n            }}\n          >\n            <i className=\"material-icons\">favorite_border</i>\n          </button>\n        </div>\n        <div className=\"card-content\">\n          <span className=\"card-title\">{post.author}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageCard;\n","import React from \"react\";\n\nconst Pagination = ({\n  paginate,\n  nextPage,\n  prevPage,\n  amountOfPages,\n  currentPage,\n}) => {\n  const pageItems = [];\n  for (let num = 1; num <= amountOfPages; num++) {\n    currentPage === num\n      ? pageItems.push(\n          <li className=\"active indigo\" key={num}>\n            <a\n              href=\"#\"\n              onClick={() => {\n                paginate(num);\n              }}\n            >\n              {num}\n            </a>\n          </li>\n        )\n      : pageItems.push(\n          <li className=\"waves-effect\" key={num}>\n            <a\n              href=\"#\"\n              onClick={() => {\n                paginate(num);\n              }}\n            >\n              {num}\n            </a>\n          </li>\n        );\n  }\n  return (\n    <div style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n      <ul className=\"pagination center\">\n        <li className=\"waves-effect\">\n          <a href=\"#!\" onClick={() => prevPage()}>\n            <i className=\"material-icons\">chevron_left</i>\n          </a>\n        </li>\n        {pageItems}\n        <li className=\"waves-effect\">\n          <a href=\"#!\" onClick={() => nextPage()}>\n            <i className=\"material-icons\">chevron_right</i>\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nconst Preloader = () => {\n  return (\n    <div className=\"preloader-wrapper big active\">\n      <div className=\"spinner-layer spinner-blue-only\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Preloader;\n","import React from \"react\";\nimport { Context } from \"../context\";\nimport ImageCard from \"../components/ImageCard\";\nimport Pagination from \"../components/Pagination\";\nimport Preloader from \"../components/Preloader\";\n\nimport \"../App.css\";\nconst MainPage = () => {\n  const {\n    posts,\n    cards,\n    paginate,\n    nextPage,\n    prevPage,\n    amountOfPages,\n    currentPage,\n  } = React.useContext(Context);\n\n  return (\n    <div className=\"container\" style={{ width: \"100%\" }}>\n      <h2>Images</h2>\n      {posts.showLoading && <Preloader />}\n      <div className=\"grid \">\n        {cards.map((item) => {\n          return (\n            <div key={item.id}>\n              <ImageCard post={item} />\n            </div>\n          );\n        })}\n      </div>\n\n      <Pagination\n        paginate={paginate}\n        nextPage={nextPage}\n        prevPage={prevPage}\n        amountOfPages={amountOfPages}\n        currentPage={currentPage}\n      />\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ImageCard from \"../components/ImageCard\";\nimport { Context } from \"../context\";\n\nimport \"../App.css\";\n\nconst FavouritesPage = () => {\n  const history = useHistory();\n  const { list, updateList } = React.useContext(Context);\n\n  // достаем данные из localStore чтобы отрисовать помеченные карточки\n  React.useEffect(() => {\n    updateList(list);\n  }, []);\n\n  return (\n    <div className=\"container\" style={{ width: \"100%\" }}>\n      <h2>Favourites</h2>\n      <div className=\"grid\">\n        {list.map((item) => {\n          return (\n            <div key={item.id}>\n              <ImageCard post={item} />\n            </div>\n          );\n        })}\n      </div>\n      <button className=\"btn indigo\" onClick={() => history.push(\"/\")}>\n        Назад\n      </button>\n    </div>\n  );\n};\n\nexport default FavouritesPage;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"../App.css\";\nconst Header = () => {\n  return (\n    <div className=\"navbar-fixed\">\n      <nav>\n        <div className=\"nav-wrapper indigo\">\n          <a href=\"/\" className=\"brand-logo right\">\n            Romanov Nikita\n          </a>\n          <div className=\"links\">\n            <ul id=\"nav-mobile\" className=\"left hide-on-med-and-down\">\n              <li>\n                <NavLink to=\"/\" className=\"link\">\n                  Images\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/favourites\" className=\"link\">\n                  Favourites\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport MainPage from \"./pages/MainPage\";\nimport FavouritesPage from \"./pages/FavouritesPage\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { Context } from \"./context\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [posts, setPosts] = useState({\n    posts: [],\n    showLoading: true,\n    currentPage: 1,\n    postsPerPage: 12,\n    amountOfPages: 30,\n  });\n  // переменные для работы c пагинацией\n  let { currentPage, amountOfPages, postsPerPage } = posts;\n  const cards = posts.posts;\n  const api = `https://picsum.photos/v2/list?page=${currentPage}&limit=${postsPerPage}`;\n\n  // отправляется запрос на сервер, после ответа полученные данные заносятся в state posts\n  useEffect(() => {\n    const getPosts = async () => {\n      const result = await axios(api);\n\n      setPosts({ ...posts, posts: result.data, showLoading: false });\n    };\n\n    getPosts();\n  }, []);\n\n  // здесь хранятся id избранных постов чтобы менять цвет кнопки\n  const [filterColor, setFilterColor] = React.useState([]);\n\n  // state избранные посты\n  const [list, setList] = React.useState([]);\n\n  let listItems = [];\n  let listId = [];\n  // добавление в state избранных постов из localStorage и id избранных постов\n  const getDataFromLocalStorage = () => {\n    Object.keys(localStorage).map((key) => {\n      listItems = [...listItems, JSON.parse(localStorage.getItem(key))];\n      listId = [...listId, key];\n    });\n\n    setList(listItems);\n    setFilterColor(listId);\n  };\n  // по обновлению страницы взять данные из localStorage\n  React.useEffect(() => {\n    getDataFromLocalStorage();\n  }, []);\n\n  // функция на добавление и удаление из избранных по кнопке (если пост есть в localStorage, то удалить, иначе занести, затем обновляем state цвета кнопки)\n  const toggleFavourite = (id, post) => {\n    if (localStorage.getItem(id, JSON.stringify(post))) {\n      localStorage.removeItem(id);\n      getDataFromLocalStorage();\n    } else {\n      localStorage.setItem(id, JSON.stringify(post));\n      getDataFromLocalStorage();\n    }\n  };\n\n  const updateList = (list) => {\n    setList(list);\n  };\n  // функция отправляет запрос с номером страницы, которая была нажата пользователем при пагинации\n  const paginate = (pageNum) => {\n    setPosts({ ...posts, showLoading: true });\n    axios\n      .get(\n        `https://picsum.photos/v2/list?page=${pageNum}&limit=${postsPerPage}`\n      )\n      .then((response) => {\n        setPosts({\n          ...posts,\n          posts: response.data,\n          currentPage: pageNum,\n          showLoading: false,\n        });\n      });\n  };\n  // функция по нажатию на стрелочку вперед с проверкой на последнюю страницу\n  const nextPage = () => {\n    posts.currentPage === amountOfPages\n      ? setPosts({ ...posts, currentPage: currentPage })\n      : paginate(posts.currentPage + 1);\n  };\n  // функция по нажатию на стрелочку назад с проверкой на первую страницу\n  const prevPage = () => {\n    posts.currentPage === 1\n      ? setPosts({ ...posts, currentPage: 1 })\n      : paginate(posts.currentPage - 1);\n  };\n\n  return (\n    <Context.Provider\n      value={{\n        list,\n        toggleFavourite,\n        posts,\n        updateList,\n        filterColor,\n        cards,\n        paginate,\n        prevPage,\n        nextPage,\n        amountOfPages,\n        currentPage,\n      }}\n    >\n      <BrowserRouter>\n        <Header />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={MainPage} />\n            <Route exact path=\"/favourites\" component={FavouritesPage} />\n            <Route />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}